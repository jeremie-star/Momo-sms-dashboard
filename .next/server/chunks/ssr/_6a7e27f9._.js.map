{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/TransactionTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionTable() from the server but TransactionTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/TransactionTable.tsx <module evaluation>\",\n    \"TransactionTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iEACA","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/TransactionTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionTable() from the server but TransactionTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/TransactionTable.tsx\",\n    \"TransactionTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ChartByMonth.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ChartByMonth = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartByMonth() from the server but ChartByMonth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ChartByMonth.tsx <module evaluation>\",\n    \"ChartByMonth\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ChartByMonth.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ChartByMonth = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartByMonth() from the server but ChartByMonth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ChartByMonth.tsx\",\n    \"ChartByMonth\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/utils/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL;\n\nexport interface Transaction {\n  id: string;\n  type: 'INCOMING' | 'P2P_TRANSFER' | 'WITHDRAWAL' | 'BUNDLE_PURCHASE' | 'AIRTIME' | 'BANK_DEPOSIT';\n  amount: number;\n  counterparty: string;\n  timestamp: string;\n  txId?: string;\n  fee?: number;\n  balance?: number;\n  channel: string;\n  msisdn?: string;\n  rawBody?: string;\n}\n\nexport interface TransactionSummary {\n  totalAmount: number;\n  totalCount: number;\n  successCount: number;\n  pendingCount: number;\n  failedCount: number;\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  success: boolean;\n  message?: string;\n  pagination?: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\n// Generic API function\nasync function apiRequest<T>(endpoint: string): Promise<T> {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`API request failed for ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Fetch all transactions\nexport async function fetchAll(limit = 100): Promise<Transaction[]> {\n  return apiRequest<Transaction[]>(`/api/transactions?limit=${limit}`);\n}\n\n// Fetch transactions by type\nexport async function fetchDataByType(type: string, limit = 100): Promise<Transaction[]> {\n  const typeMap: Record<string, string> = {\n    'incoming': 'INCOMING',\n    'p2p': 'P2P_TRANSFER',\n    'withdrawal': 'WITHDRAWAL',\n    'bundle': 'BUNDLE_PURCHASE',\n    'airtime': 'AIRTIME',\n    'bank': 'BANK_DEPOSIT'\n  };\n\n  const backendType = typeMap[type.toLowerCase()];\n  if (!backendType) {\n    throw new Error(`Unknown transaction type: ${type}`);\n  }\n\n  return apiRequest<Transaction[]>(`/api/transactions/${type}?limit=${limit}`);\n}\n\n// Fetch filtered transactions\nexport async function fetchFilteredTransactions(\n  type?: string,\n  limit = 100\n): Promise<Transaction[]> {\n  const params = new URLSearchParams();\n  \n  if (type && type !== 'all') {\n    const typeMap: Record<string, string> = {\n      'incoming': 'INCOMING',\n      'p2p': 'P2P_TRANSFER',\n      'withdrawal': 'WITHDRAWAL',\n      'bundle': 'BUNDLE_PURCHASE',\n      'airtime': 'AIRTIME',\n      'bank': 'BANK_DEPOSIT'\n    };\n    const backendType = typeMap[type.toLowerCase()];\n    if (backendType) {\n      params.append('type', backendType);\n    }\n  }\n  \n  params.append('limit', limit.toString());\n\n  return apiRequest<Transaction[]>(`/api/transactions?${params.toString()}`);\n}\n\n// Generate transaction summary from data\nexport function generateSummaryFromTransactions(transactions: Transaction[]): TransactionSummary {\n  const totalAmount = transactions.reduce((sum, t) => sum + t.amount, 0);\n  const totalCount = transactions.length;\n  const successCount = totalCount; \n  const pendingCount = 0;\n  const failedCount = 0;\n\n  return {\n    totalAmount,\n    totalCount,\n    successCount,\n    pendingCount,\n    failedCount,\n  };\n}"],"names":[],"mappings":";;;;;;AAAA,MAAM;AAoCN,uBAAuB;AACvB,eAAe,WAAc,QAAgB;IAC3C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,UAAU,EAAE;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,EAAE;QACrD,MAAM;IACR;AACF;AAGO,eAAe,SAAS,QAAQ,GAAG;IACxC,OAAO,WAA0B,CAAC,wBAAwB,EAAE,OAAO;AACrE;AAGO,eAAe,gBAAgB,IAAY,EAAE,QAAQ,GAAG;IAC7D,MAAM,UAAkC;QACtC,YAAY;QACZ,OAAO;QACP,cAAc;QACd,UAAU;QACV,WAAW;QACX,QAAQ;IACV;IAEA,MAAM,cAAc,OAAO,CAAC,KAAK,WAAW,GAAG;IAC/C,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,MAAM;IACrD;IAEA,OAAO,WAA0B,CAAC,kBAAkB,EAAE,KAAK,OAAO,EAAE,OAAO;AAC7E;AAGO,eAAe,0BACpB,IAAa,EACb,QAAQ,GAAG;IAEX,MAAM,SAAS,IAAI;IAEnB,IAAI,QAAQ,SAAS,OAAO;QAC1B,MAAM,UAAkC;YACtC,YAAY;YACZ,OAAO;YACP,cAAc;YACd,UAAU;YACV,WAAW;YACX,QAAQ;QACV;QACA,MAAM,cAAc,OAAO,CAAC,KAAK,WAAW,GAAG;QAC/C,IAAI,aAAa;YACf,OAAO,MAAM,CAAC,QAAQ;QACxB;IACF;IAEA,OAAO,MAAM,CAAC,SAAS,MAAM,QAAQ;IAErC,OAAO,WAA0B,CAAC,kBAAkB,EAAE,OAAO,QAAQ,IAAI;AAC3E;AAGO,SAAS,gCAAgC,YAA2B;IACzE,MAAM,cAAc,aAAa,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;IACpE,MAAM,aAAa,aAAa,MAAM;IACtC,MAAM,eAAe;IACrB,MAAM,eAAe;IACrB,MAAM,cAAc;IAEpB,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/app/%5Btype%5D/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { TransactionTable } from '@/components/TransactionTable';\nimport { ChartByMonth } from '@/components/ChartByMonth';\nimport { Transaction, fetchDataByType } from '@/utils/api';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport Link from 'next/link';\n\nconst TYPE_CONFIG = {\n  incoming: {\n    title: 'Incoming Transactions',\n    description: 'Money received from various sources',\n    color: 'bg-blue-500',\n    icon: '📥',\n  },\n  p2p: {\n    title: 'P2P Transfers',\n    description: 'Person-to-person money transfers',\n    color: 'bg-purple-500',\n    icon: '🔄',\n  },\n  withdrawal: {\n    title: 'Withdrawals',\n    description: 'Cash withdrawals and money sent out',\n    color: 'bg-orange-500',\n    icon: '💸',\n  },\n  bundle: {\n    title: 'Bundle Purchases',\n    description: 'Data bundle and package purchases',\n    color: 'bg-indigo-500',\n    icon: '📱',\n  },\n  airtime: {\n    title: 'Airtime Purchases',\n    description: 'Mobile airtime top-ups and purchases',\n    color: 'bg-cyan-500',\n    icon: '📞',\n  },\n  bank: {\n    title: 'Bank Deposits',\n    description: 'Money transfers to and from banks',\n    color: 'bg-emerald-500',\n    icon: '🏦',\n  },\n};\n\nexport default function TransactionTypePage() {\n  const params = useParams();\n  const router = useRouter();\n  const type = params.type as string;\n  const channel = params.channel as string | undefined;\n\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [error, setError] = useState<string | null>(null);\n\n  const config = TYPE_CONFIG[type as keyof typeof TYPE_CONFIG];\n\n  useEffect(() => {\n    if (!config) {\n      router.push('/');\n      return;\n    }\n    loadTransactionData();\n  }, [type, config, router]);\n\n  const loadTransactionData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const fetchedTransactions = await fetchDataByType(type, 200);\n      setTransactions(fetchedTransactions);\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Failed to load transaction data:', error);\n      setError('Failed to load transaction data. Please check your backend connection.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!config) return null;\n\n  const totalAmount = transactions.reduce((sum, t) => sum + t.amount, 0);\n  const totalCount = transactions.length;\n  const avgAmount = totalCount > 0 ? totalAmount / totalCount : 0;\n\n  const channelCounts = transactions.reduce((acc, t) => {\n    acc[t.channel] = (acc[t.channel] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  const formatCurrency = (amount: number) => new Intl.NumberFormat('en-RW', {\n    style: 'currency',\n    currency: 'RWF',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-yellow-50 via-amber-50 to-white\">\n      <div className=\"bg-white shadow-lg border-b border-yellow-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div className=\"flex items-center\">\n              <Link href=\"/\">\n                <Button variant=\"outline\" size=\"sm\" className=\"mr-4 border-yellow-300 hover:bg-yellow-50\">\n                  <ArrowBackIcon className=\"w-4 h-4 mr-2\" />\n                  Back to Dashboard\n                </Button>\n              </Link>\n              <div className={`w-12 h-12 ${config.color} rounded-full flex items-center justify-center mr-4 text-white text-xl shadow-lg`}>\n                {config.icon}\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">{config.title}</h1>\n                <p className=\"text-sm text-gray-600\">{config.description}</p>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-sm text-gray-600\">Last updated</p>\n              <p className=\"text-sm font-medium\">{lastUpdated.toLocaleTimeString()}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center\">\n              <ErrorIcon className=\"w-5 h-5 text-red-500 mr-2\" />\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">Total Amount</CardTitle>\n              <AccountBalanceWalletIcon className=\"w-4 h-4 text-yellow-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {loading ? <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div> : formatCurrency(totalAmount)}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">{type.charAt(0).toUpperCase() + type.slice(1)} transactions</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-yellow-200\" style={{ animationDelay: '0.1s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">Total Count</CardTitle>\n              <TrendingUpIcon className=\"w-4 h-4 text-yellow-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {loading ? <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div> : totalCount.toLocaleString()}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">Total transactions</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-green-200\" style={{ animationDelay: '0.2s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">Average Amount</CardTitle>\n              <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {loading ? <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div> : formatCurrency(avgAmount)}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">Per transaction</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-blue-200\" style={{ animationDelay: '0.3s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">Channel Breakdown</CardTitle>\n              <div className=\"flex gap-1\">\n                <CheckCircleIcon className=\"w-3 h-3 text-green-400\" />\n                <PendingIcon className=\"w-3 h-3 text-yellow-400\" />\n                <ErrorIcon className=\"w-3 h-3 text-red-400\" />\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex gap-2 flex-wrap\">\n                {Object.entries(channelCounts).map(([ch, count]) => (\n                  <Badge\n                    key={ch}\n                    variant=\"secondary\"\n                    className=\"bg-blue-100 text-blue-800 cursor-pointer hover:underline\"\n                    onClick={() => router.push(`/transactions/${type}?channel=${ch}`)}\n                  >\n                    {count} {ch}\n                  </Badge>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"mb-8\">\n          <ChartByMonth transactions={transactions} loading={loading} />\n        </div>\n\n        <TransactionTable \n          transactions={transactions} \n          loading={loading}\n          title={`All ${config.title}`}\n        />\n      </div>\n    </div>\n  );\n}\nexport async function generateStaticParams() {\n  return [\n    { type: 'incoming' },\n    { type: 'p2p' },\n    { type: 'withdrawal' },\n    { type: 'bundle' },\n    { type: 'airtime' },\n    { type: 'bank' },\n  ];\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}