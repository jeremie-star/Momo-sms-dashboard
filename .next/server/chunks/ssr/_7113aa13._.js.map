{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/select.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ui/table.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn('w-full caption-bottom text-sm', className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn('[&_tr]:border-b', className)} {...props} />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn('[&_tr:last-child]:border-0', className)}\n    {...props}\n  />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      'border-t bg-muted/50 font-medium [&>tr]:last:border-b-0',\n      className\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      className\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      className\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn('p-4 align-middle [&:has([role=checkbox])]:pr-0', className)}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn('mt-4 text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/TransactionTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { Transaction } from '@/utils/api';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { format } from 'date-fns';\n\ninterface TransactionTableProps {\n  transactions: Transaction[];\n  loading?: boolean;\n  title?: string;\n}\n\nconst ITEMS_PER_PAGE = 10;\n\nexport function TransactionTable({ \n  transactions, \n  loading = false, \n  title = \"Recent Transactions\" \n}: TransactionTableProps) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [channelFilter, setChannelFilter] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const filteredTransactions = useMemo(() => {\n    return transactions.filter((transaction) => {\n      const matchesSearch = \n          (transaction.counterparty?.toLowerCase() || '').includes(searchTerm.toLowerCase()) ||\n          (transaction.txId?.toLowerCase() || '').includes(searchTerm.toLowerCase()) ||\n          (transaction.channel?.toLowerCase() || '').includes(searchTerm.toLowerCase());\n\n        const matchesType = typeFilter === 'all' || transaction.type === typeFilter;\n        const matchesChannel = channelFilter === 'all' || transaction.channel === channelFilter;\n\n      return matchesSearch && matchesType && matchesChannel;\n    });\n  }, [transactions, searchTerm, typeFilter, channelFilter]);\n\n  const totalPages = Math.ceil(filteredTransactions.length / ITEMS_PER_PAGE);\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const paginatedTransactions = filteredTransactions.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'INCOMING':\n        return 'bg-blue-100 text-blue-800 hover:bg-blue-200';\n      case 'P2P_TRANSFER':\n        return 'bg-purple-100 text-purple-800 hover:bg-purple-200';\n      case 'WITHDRAWAL':\n        return 'bg-orange-100 text-orange-800 hover:bg-orange-200';\n      case 'BUNDLE_PURCHASE':\n        return 'bg-indigo-100 text-indigo-800 hover:bg-indigo-200';\n      case 'AIRTIME':\n        return 'bg-cyan-100 text-cyan-800 hover:bg-cyan-200';\n      case 'BANK_DEPOSIT':\n        return 'bg-emerald-100 text-emerald-800 hover:bg-emerald-200';\n      default:\n        return 'bg-gray-100 text-gray-800 hover:bg-gray-200';\n    }\n  };\n\n  const getChannelColor = (channel: string) => {\n    switch (channel) {\n      case 'USSD':\n        return 'bg-green-100 text-green-800 hover:bg-green-200';\n      case 'AGENT':\n        return 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200';\n      case 'BANK':\n        return 'bg-blue-100 text-blue-800 hover:bg-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 hover:bg-gray-200';\n    }\n  };\n\n  const formatAmount = (amount: number) => {\n    return new Intl.NumberFormat('en-RW', {\n      style: 'currency',\n      currency: 'RWF',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatType = (type: string) => {\n    switch (type) {\n      case 'P2P_TRANSFER':\n        return 'P2P';\n      case 'BUNDLE_PURCHASE':\n        return 'Bundle';\n      case 'BANK_DEPOSIT':\n        return 'Bank';\n      default:\n        return type;\n    }\n  };\n\n  const exportToCSV = () => {\n    const headers = ['Date', 'Transaction ID', 'Type', 'Counterparty', 'Amount', 'Channel', 'Fee', 'Balance'];\n    const csvData = filteredTransactions.map(transaction => [\n      format(new Date(transaction.timestamp), 'yyyy-MM-dd HH:mm:ss'),\n      transaction.txId || 'N/A',\n      transaction.type,\n      transaction.counterparty,\n      transaction.amount,\n      transaction.channel,\n      transaction.fee || 0,\n      transaction.balance || 'Unknown'\n    ]);\n\n    const csvContent = [headers, ...csvData]\n      .map(row => row.map(field => `\"${field}\"`).join(','))\n      .join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `transactions-${format(new Date(), 'yyyy-MM-dd')}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n          <CardTitle className=\"text-xl font-semibold text-gray-900\">{title}</CardTitle>\n          <Button \n            onClick={exportToCSV}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2 hover:bg-yellow-50 hover:border-yellow-300\"\n          >\n            <DownloadIcon className=\"w-4 h-4\" />\n            Export CSV\n          </Button>\n        </div>\n        \n        {/* Filters */}\n        <div className=\"flex flex-col sm:flex-row gap-4 mt-4\">\n          <div className=\"relative flex-1\">\n            <SearchIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <Input\n              placeholder=\"Search transactions...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 border-yellow-200 focus:border-yellow-400\"\n            />\n          </div>\n          <div className=\"flex gap-2\">\n            <Select value={typeFilter} onValueChange={setTypeFilter}>\n              <SelectTrigger className=\"w-40 border-yellow-200\">\n                <SelectValue placeholder=\"Type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Types</SelectItem>\n                <SelectItem value=\"INCOMING\">Incoming</SelectItem>\n                <SelectItem value=\"P2P_TRANSFER\">P2P Transfer</SelectItem>\n                <SelectItem value=\"WITHDRAWAL\">Withdrawal</SelectItem>\n                <SelectItem value=\"BUNDLE_PURCHASE\">Bundle</SelectItem>\n                <SelectItem value=\"AIRTIME\">Airtime</SelectItem>\n                <SelectItem value=\"BANK_DEPOSIT\">Bank</SelectItem>\n              </SelectContent>\n            </Select>\n            \n            <Select value={channelFilter} onValueChange={setChannelFilter}>\n              <SelectTrigger className=\"w-32 border-yellow-200\">\n                <SelectValue placeholder=\"Channel\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Channels</SelectItem>\n                <SelectItem value=\"USSD\">USSD</SelectItem>\n                <SelectItem value=\"AGENT\">Agent</SelectItem>\n                <SelectItem value=\"BANK\">Bank</SelectItem>\n                <SelectItem value=\"UNKNOWN\">Unknown</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"p-0\">\n        {loading ? (\n          <div className=\"p-8 text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-500 mx-auto\"></div>\n            <p className=\"mt-2 text-gray-600\">Loading transactions...</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"bg-yellow-50\">\n                    <TableHead className=\"font-semibold text-gray-700\">Date</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700\">Transaction ID</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700\">Type</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700\">Counterparty</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700 text-right\">Amount</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700\">Channel</TableHead>\n                    <TableHead className=\"font-semibold text-gray-700\">Fee</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {paginatedTransactions.length === 0 ? (\n                    <TableRow>\n                      <TableCell colSpan={7} className=\"text-center py-8 text-gray-500\">\n                        No transactions found\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    paginatedTransactions.map((transaction, index) => (\n                      <TableRow \n                        key={transaction.id || index} \n                        className=\"hover:bg-yellow-50 transition-colors duration-150\"\n                      >\n                        <TableCell className=\"font-medium\">\n                          {format(new Date(transaction.timestamp), 'MMM dd, yyyy')}\n                          <div className=\"text-xs text-gray-500\">\n                            {format(new Date(transaction.timestamp), 'HH:mm:ss')}\n                          </div>\n                        </TableCell>\n                        <TableCell className=\"font-mono text-sm text-gray-600\">\n                          {transaction.txId || 'N/A'}\n                        </TableCell>\n                        <TableCell>\n                          <Badge \n                            variant=\"secondary\" \n                            className={`${getTypeColor(transaction.type)} font-medium`}\n                          >\n                            {formatType(transaction.type)}\n                          </Badge>\n                        </TableCell>\n                        <TableCell className=\"max-w-xs truncate\">\n                          {transaction.counterparty}\n                        </TableCell>\n                        <TableCell className=\"text-right font-semibold\">\n                          {formatAmount(transaction.amount)}\n                        </TableCell>\n                        <TableCell>\n                          <Badge \n                            variant=\"secondary\" \n                            className={`${getChannelColor(transaction.channel)} font-medium`}\n                          >\n                            {transaction.channel}\n                          </Badge>\n                        </TableCell>\n                        <TableCell className=\"text-gray-600\">\n                          {transaction.fee ? formatAmount(transaction.fee) : '0 RWF'}\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n            \n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"flex items-center justify-between px-6 py-4 border-t bg-yellow-50\">\n                <div className=\"text-sm text-gray-600\">\n                  Showing {startIndex + 1} to {Math.min(startIndex + ITEMS_PER_PAGE, filteredTransactions.length)} of{' '}\n                  {filteredTransactions.length} transactions\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    className=\"flex items-center gap-1 border-yellow-300 hover:bg-yellow-100\"\n                  >\n                    <ChevronLeftIcon className=\"w-4 h-4\" />\n                    Previous\n                  </Button>\n                  \n                  <div className=\"flex items-center gap-1\">\n                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                      let pageNum;\n                      if (totalPages <= 5) {\n                        pageNum = i + 1;\n                      } else if (currentPage <= 3) {\n                        pageNum = i + 1;\n                      } else if (currentPage >= totalPages - 2) {\n                        pageNum = totalPages - 4 + i;\n                      } else {\n                        pageNum = currentPage - 2 + i;\n                      }\n                      \n                      return (\n                        <Button\n                          key={pageNum}\n                          variant={pageNum === currentPage ? \"default\" : \"outline\"}\n                          size=\"sm\"\n                          onClick={() => setCurrentPage(pageNum)}\n                          className={`w-8 h-8 p-0 ${pageNum === currentPage ? 'bg-gradient-primary text-white' : 'border-yellow-300 hover:bg-yellow-100'}`}\n                        >\n                          {pageNum}\n                        </Button>\n                      );\n                    })}\n                  </div>\n                  \n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    className=\"flex items-center gap-1 border-yellow-300 hover:bg-yellow-100\"\n                  >\n                    Next\n                    <ChevronRightIcon className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1279, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ChartByType.tsx"],"sourcesContent":["'use client';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Transaction } from '@/utils/api';\nimport { useMemo } from 'react';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\n\ninterface ChartByTypeProps {\n  transactions: Transaction[];\n  loading?: boolean;\n}\n\nexport function ChartByType({ transactions, loading = false }: ChartByTypeProps) {\n  const chartData = useMemo(() => {\n    if (!transactions || transactions.length === 0) return [];\n    const typeData = transactions.reduce((acc, transaction) => {\n      const type = transaction.type;\n      if (!acc[type]) {\n        acc[type] = {\n          type: formatTypeName(type),\n          count: 0,\n          amount: 0,\n          totalFees: 0,\n        };\n      }\n      \n      acc[type].count += 1;\n      acc[type].amount += transaction.amount;\n      acc[type].totalFees += transaction.fee || 0;\n      \n      return acc;\n    }, {} as Record<string, any>);\n\n    return Object.values(typeData).map((data: any) => ({\n      ...data,\n      amount: Math.round(data.amount / 1000), // Convert to thousands for better readability\n      avgAmount: Math.round(data.amount * 1000 / data.count), // Average amount per transaction\n    }));\n  }, [transactions]);\n\n  const totalTransactions = transactions.length;\n  const totalAmount = transactions.reduce((sum, t) => sum + t.amount, 0);\n\n  function formatTypeName(type: string): string {\n    switch (type) {\n      case 'P2P_TRANSFER':\n        return 'P2P Transfer';\n      case 'BUNDLE_PURCHASE':\n        return 'Bundle';\n      case 'BANK_DEPOSIT':\n        return 'Bank';\n      case 'INCOMING':\n        return 'Incoming';\n      case 'WITHDRAWAL':\n        return 'Withdrawal';\n      case 'AIRTIME':\n        return 'Airtime';\n      default:\n        return type;\n    }\n  }\nconsole.log('Chart Data:', chartData);\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border rounded-lg shadow-lg border-yellow-200\">\n          <p className=\"font-semibold text-gray-900\">{`Type: ${label}`}</p>\n          <p className=\"text-blue-600\">{`Transactions: ${data.count}`}</p>\n          <p className=\"text-yellow-600\">{`Amount: ${data.amount.toLocaleString()} RWF`}</p>\n          <p className=\"text-green-600\">{`Avg: ${data.avgAmount.toLocaleString()} RWF`}</p>\n          <p className=\"text-purple-600\">{`Total Fees: ${data.totalFees.toLocaleString()} RWF`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (loading) {\n    return (\n      <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUpIcon className=\"w-5 h-5 text-yellow-600\" />\n            Transactions by Type\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex items-center justify-center h-80\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-600\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUpIcon className=\"w-5 h-5 text-yellow-600\" />\n            Transactions by Type\n          </CardTitle>\n          <div className=\"text-right\">\n            <p className=\"text-sm text-gray-600\">Total Transactions</p>\n            <p className=\"text-lg font-semibold text-gray-900\">{totalTransactions.toLocaleString()}</p>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {chartData.length === 0 ? (\n          <div className=\"flex items-center justify-center h-80 text-gray-500\">\n            No data available\n          </div>\n        ) : (\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={chartData}\n                margin={{\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n                barCategoryGap=\"20%\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fef3c7\" />\n                <XAxis \n                  dataKey=\"type\" \n                  stroke=\"#92400e\"\n                  fontSize={12}\n                  tickLine={false}\n                  axisLine={false}\n                />\n                <YAxis \n                  stroke=\"#92400e\"\n                  fontSize={12}\n                  tickLine={false}\n                  axisLine={false}\n                  tickFormatter={(value) => `${value}`}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n                <Bar \n                  dataKey=\"count\" \n                  name=\"Transactions\"\n                  fill=\"#f59e0b\" \n                  radius={[4, 4, 0, 0]}\n                  className=\"hover:opacity-80 transition-opacity\"\n                />\n                <Bar \n                  dataKey=\"amount\" \n                  name=\"Amount (K RWF)\"\n                  fill=\"#10b981\" \n                  radius={[4, 4, 0, 0]}\n                  className=\"hover:opacity-80 transition-opacity\"\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n        \n        {/* Summary Stats */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6 pt-6 border-t border-yellow-200\">\n          {chartData.slice(0, 4).map((item) => (\n            <div key={item.type} className=\"text-center\">\n              <p className=\"text-xs text-gray-600 uppercase tracking-wide\">{item.type}</p>\n              <p className=\"text-lg font-semibold text-gray-900\">{item.count}</p>\n              <p className=\"text-xs text-gray-500\">{item.amount} RWF</p>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1690, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/components/ChartByMonth.tsx"],"sourcesContent":["'use client';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ComposedChart, Bar, Line, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip, Legend,} from 'recharts';\nimport { Transaction } from '@/utils/api';\nimport { useMemo } from 'react';\nimport {format, startOfMonth, endOfMonth, eachMonthOfInterval, subMonths,} from 'date-fns';\nimport ShowChartIcon from '@mui/icons-material/ShowChart';\n\ninterface ChartByMonthProps {\n  transactions: Transaction[];\n  loading?: boolean;\n}\n\nexport function ChartByMonth({ transactions, loading = false }: ChartByMonthProps) {\n  const chartData = useMemo(() => {\n    const now = new Date();\n    const sixMonthsAgo = subMonths(now, 5);\n\n    const months = eachMonthOfInterval({\n      start: startOfMonth(sixMonthsAgo),\n      end: endOfMonth(now),\n    });\n\n    const monthlyData = months.map((month) => {\n      const monthStart = startOfMonth(month);\n      const monthEnd = endOfMonth(month);\n\n      const monthTransactions = transactions.filter((transaction) => {\n        const transactionDate = new Date(transaction.timestamp);\n        if (isNaN(transactionDate.getTime())) {\n          console.warn('Invalid date:', transaction.timestamp);\n          return false;\n        }\n        return transactionDate >= monthStart && transactionDate <= monthEnd;\n      });\n\n      const totalAmount = monthTransactions.reduce((sum, t) => sum + t.amount, 0);\n      const totalFees = monthTransactions.reduce((sum, t) => sum + (t.fee || 0), 0);\n\n      return {\n        month: format(month, 'MMM yyyy'),\n        shortMonth: format(month, 'MMM'),\n        totalTransactions: monthTransactions.length,\n        totalAmount: Math.round(totalAmount / 1000000),\n        totalFees: Math.round(totalFees / 1000),\n        averageAmount: monthTransactions.length\n          ? Math.round(totalAmount / monthTransactions.length)\n          : 0,\n        ussdTransactions: monthTransactions.filter((t) => t.channel === 'USSD').length,\n        agentTransactions: monthTransactions.filter((t) => t.channel === 'AGENT').length,\n      };\n    });\n\n    return monthlyData;\n  }, [transactions]);\n\n  const totalGrowth = useMemo(() => {\n    if (chartData.length < 2) return 0;\n    const current = chartData[chartData.length - 1]?.totalAmount || 0;\n    const previous = chartData[chartData.length - 2]?.totalAmount || 0;\n    if (previous === 0) return 0;\n    return Math.round(((current - previous) / previous) * 100);\n  }, [chartData]);\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border rounded-lg shadow-lg border-yellow-200\">\n          <p className=\"font-semibold text-gray-900 mb-2\">{label}</p>\n          <div className=\"space-y-1\">\n            <p className=\"text-blue-600\">{`Total: ${data.totalTransactions} transactions`}</p>\n            <p className=\"text-yellow-600\">{`Amount: ${data.totalAmount}M RWF`}</p>\n            <p className=\"text-green-600\">{`Fees: ${data.totalFees}K RWF`}</p>\n            <p className=\"text-orange-600\">{`Avg Amount: ${data.averageAmount.toLocaleString()} RWF`}</p>\n            <p className=\"text-purple-600\">{`USSD: ${data.ussdTransactions}, Agent: ${data.agentTransactions}`}</p>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (loading) {\n    return (\n      <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <ShowChartIcon className=\"w-5 h-5 text-green-600\" />\n            Monthly Transaction Trends\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex items-center justify-center h-80\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"animate-slide-up shadow-lg border-yellow-200\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <ShowChartIcon className=\"w-5 h-5 text-green-600\" />\n            Monthly Transaction Trends\n          </CardTitle>\n          <div className=\"text-right\">\n            <p className=\"text-sm text-gray-600\">Month-over-Month Growth</p>\n            <p\n              className={`text-lg font-semibold ${\n                totalGrowth >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {totalGrowth >= 0 ? '+' : ''}\n              {totalGrowth}%\n            </p>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {chartData.length === 0 || chartData.every((d) => d.totalTransactions === 0) ? (\n          <div className=\"flex items-center justify-center h-80 text-gray-500\">\n            No data available for the selected period\n          </div>\n        ) : (\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fef3c7\" />\n                <XAxis\n                  dataKey=\"shortMonth\"\n                  stroke=\"#92400e\"\n                  fontSize={12}\n                  tickLine={false}\n                  axisLine={false}\n                />\n                <YAxis\n                  stroke=\"#92400e\"\n                  fontSize={12}\n                  tickLine={false}\n                  axisLine={false}\n                  domain={[0, 'auto']}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n\n                <Bar\n                  dataKey=\"totalTransactions\"\n                  fill=\"#f59e0b\"\n                  name=\"Total Transactions\"\n                  barSize={30}\n                  radius={[4, 4, 0, 0]}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"totalAmount\"\n                  stroke=\"#10b981\"\n                  strokeWidth={3}\n                  dot={{ r: 3 }}\n                  name=\"Amount (M RWF)\"\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n\n        {/* Summary Statistics */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6 pt-6 border-t border-yellow-200\">\n          {chartData.slice(-4).map((item) => (\n            <div key={item.month} className=\"text-center\">\n              <p className=\"text-xs text-gray-600 uppercase tracking-wide\">{item.shortMonth}</p>\n              <p className=\"text-lg font-semibold text-gray-900\">{item.totalTransactions}</p>\n              <p className=\"text-xs text-gray-500\">{item.totalAmount}M RWF</p>\n              <p className=\"text-xs text-green-600\">{item.ussdTransactions} USSD</p>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2138, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/utils/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL;\n\nexport interface Transaction {\n  id: string;\n  type: 'INCOMING' | 'P2P_TRANSFER' | 'WITHDRAWAL' | 'BUNDLE_PURCHASE' | 'AIRTIME' | 'BANK_DEPOSIT';\n  amount: number;\n  counterparty: string;\n  timestamp: string;\n  txId?: string;\n  fee?: number;\n  balance?: number;\n  channel: string;\n  msisdn?: string;\n  rawBody?: string;\n}\n\nexport interface TransactionSummary {\n  totalAmount: number;\n  totalCount: number;\n  successCount: number;\n  pendingCount: number;\n  failedCount: number;\n}\n\nexport interface ApiResponse<T> {\n  data: T;\n  success: boolean;\n  message?: string;\n  pagination?: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\n// Generic API function\nasync function apiRequest<T>(endpoint: string): Promise<T> {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`API request failed for ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Fetch all transactions\nexport async function fetchAll(limit = 100): Promise<Transaction[]> {\n  return apiRequest<Transaction[]>(`/api/transactions?limit=${limit}`);\n}\n\n// Fetch transactions by type\nexport async function fetchDataByType(type: string, limit = 100): Promise<Transaction[]> {\n  const typeMap: Record<string, string> = {\n    'incoming': 'INCOMING',\n    'p2p': 'P2P_TRANSFER',\n    'withdrawal': 'WITHDRAWAL',\n    'bundle': 'BUNDLE_PURCHASE',\n    'airtime': 'AIRTIME',\n    'bank': 'BANK_DEPOSIT'\n  };\n\n  const backendType = typeMap[type.toLowerCase()];\n  if (!backendType) {\n    throw new Error(`Unknown transaction type: ${type}`);\n  }\n\n  return apiRequest<Transaction[]>(`/api/transactions/${type}?limit=${limit}`);\n}\n\n// Fetch filtered transactions\nexport async function fetchFilteredTransactions(\n  type?: string,\n  limit = 100\n): Promise<Transaction[]> {\n  const params = new URLSearchParams();\n  \n  if (type && type !== 'all') {\n    const typeMap: Record<string, string> = {\n      'incoming': 'INCOMING',\n      'p2p': 'P2P_TRANSFER',\n      'withdrawal': 'WITHDRAWAL',\n      'bundle': 'BUNDLE_PURCHASE',\n      'airtime': 'AIRTIME',\n      'bank': 'BANK_DEPOSIT'\n    };\n    const backendType = typeMap[type.toLowerCase()];\n    if (backendType) {\n      params.append('type', backendType);\n    }\n  }\n  \n  params.append('limit', limit.toString());\n\n  return apiRequest<Transaction[]>(`/api/transactions?${params.toString()}`);\n}\n\n// Generate transaction summary from data\nexport function generateSummaryFromTransactions(transactions: Transaction[]): TransactionSummary {\n  const totalAmount = transactions.reduce((sum, t) => sum + t.amount, 0);\n  const totalCount = transactions.length;\n  const successCount = totalCount; \n  const pendingCount = 0;\n  const failedCount = 0;\n\n  return {\n    totalAmount,\n    totalCount,\n    successCount,\n    pendingCount,\n    failedCount,\n  };\n}"],"names":[],"mappings":";;;;;;AAAA,MAAM;AAoCN,uBAAuB;AACvB,eAAe,WAAc,QAAgB;IAC3C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,UAAU,EAAE;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,EAAE;QACrD,MAAM;IACR;AACF;AAGO,eAAe,SAAS,QAAQ,GAAG;IACxC,OAAO,WAA0B,CAAC,wBAAwB,EAAE,OAAO;AACrE;AAGO,eAAe,gBAAgB,IAAY,EAAE,QAAQ,GAAG;IAC7D,MAAM,UAAkC;QACtC,YAAY;QACZ,OAAO;QACP,cAAc;QACd,UAAU;QACV,WAAW;QACX,QAAQ;IACV;IAEA,MAAM,cAAc,OAAO,CAAC,KAAK,WAAW,GAAG;IAC/C,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,MAAM;IACrD;IAEA,OAAO,WAA0B,CAAC,kBAAkB,EAAE,KAAK,OAAO,EAAE,OAAO;AAC7E;AAGO,eAAe,0BACpB,IAAa,EACb,QAAQ,GAAG;IAEX,MAAM,SAAS,IAAI;IAEnB,IAAI,QAAQ,SAAS,OAAO;QAC1B,MAAM,UAAkC;YACtC,YAAY;YACZ,OAAO;YACP,cAAc;YACd,UAAU;YACV,WAAW;YACX,QAAQ;QACV;QACA,MAAM,cAAc,OAAO,CAAC,KAAK,WAAW,GAAG;QAC/C,IAAI,aAAa;YACf,OAAO,MAAM,CAAC,QAAQ;QACxB;IACF;IAEA,OAAO,MAAM,CAAC,SAAS,MAAM,QAAQ;IAErC,OAAO,WAA0B,CAAC,kBAAkB,EAAE,OAAO,QAAQ,IAAI;AAC3E;AAGO,SAAS,gCAAgC,YAA2B;IACzE,MAAM,cAAc,aAAa,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;IACpE,MAAM,aAAa,aAAa,MAAM;IACtC,MAAM,eAAe;IACrB,MAAM,eAAe;IACrB,MAAM,cAAc;IAEpB,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 2221, "column": 0}, "map": {"version":3,"sources":["file:///Users/Jeremie/ALU%20Works/Momo-sms-dashboard/gwamo-na-mtn/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { TransactionTable } from '@/components/TransactionTable';\nimport { ChartByType } from '@/components/ChartByType';\nimport { ChartByMonth } from '@/components/ChartByMonth';\nimport { \n  Transaction, \n  TransactionSummary, \n  fetchAll,\n  generateSummaryFromTransactions\n} from '@/utils/api';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\n\nimport Link from 'next/link';\n\nexport default function Dashboard() {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [summary, setSummary] = useState<TransactionSummary | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const fetchedTransactions = await fetchAll(1000);\n      const generatedSummary = generateSummaryFromTransactions(fetchedTransactions);\n      \n      setTransactions(fetchedTransactions);\n      setSummary(generatedSummary);\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Failed to load dashboard data:', error);\n      setError('Failed to connect to backend. Please ensure your API is running on http://localhost:3002');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-RW', {\n      style: 'currency',\n      currency: 'RWF',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);   \n  };\n\n  const recentTransactions = transactions.slice();\n\n  const getTransactionCount = (type: string) => {\n    const typeMap: Record<string, string> = {\n      'incoming': 'INCOMING',\n      'p2p': 'P2P_TRANSFER',\n      'withdrawal': 'WITHDRAWAL',\n      'bundle': 'BUNDLE_PURCHASE',\n      'airtime': 'AIRTIME',\n      'bank': 'BANK_DEPOSIT'\n    };\n    return transactions.filter(t => t.type === typeMap[type]).length;\n  };\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-yellow-50 via-amber-50 to-white\">\n      {/* Header */}\n      <div className=\"bg-white shadow-lg border-b border-yellow-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div className=\"flex items-center\">\n              <div className=\"w-12 h-12 bg-gradient-primary rounded-full flex items-center justify-center mr-4 shadow-lg\">\n                <DashboardIcon className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">MoMo Dashboard</h1>\n                <p className=\"text-sm text-gray-600\">\n                  Last updated: {lastUpdated.toLocaleTimeString()}\n                </p>\n              </div>\n            </div>\n            <Button \n              onClick={loadDashboardData}\n              disabled={loading}\n              className=\"flex items-center gap-2 bg-gradient-primary hover:bg-yellow-600 text-white shadow-lg\"\n            >\n              <RefreshIcon className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center\">\n              <ErrorIcon className=\"w-5 h-5 text-red-500 mr-2\" />\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"bg-gradient-primary text-white animate-slide-up shadow-xl border-0\">\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-yellow-100\">\n                Total Amount\n              </CardTitle>\n              <AccountBalanceWalletIcon className=\"w-4 h-4 text-yellow-200\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {loading ? (\n                  <div className=\"h-8 bg-yellow-400 rounded animate-pulse\"></div>\n                ) : (\n                  formatCurrency(summary?.totalAmount || 0)\n                )}\n              </div>\n              <p className=\"text-xs text-yellow-200 mt-1\">\n                Across all transactions\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-yellow-200\" style={{ animationDelay: '0.1s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">\n                Total Transactions\n              </CardTitle>\n              <TrendingUpIcon className=\"w-4 h-4 text-yellow-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {loading ? (\n                  <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div>\n                ) : (\n                  (summary?.totalCount || 0).toLocaleString()\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">\n                All time\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-green-200\" style={{ animationDelay: '0.2s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">\n                Successful\n              </CardTitle>\n              <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {loading ? (\n                  <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div>\n                ) : (\n                  (summary?.successCount || 0).toLocaleString()\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">\n                {summary && summary.totalCount > 0 \n                  ? `${Math.round((summary.successCount / summary.totalCount) * 100)}% success rate`\n                  : 'Success rate'\n                }\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"animate-slide-up shadow-lg border-red-200\" style={{ animationDelay: '0.3s' }}>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n              <CardTitle className=\"text-sm font-medium text-gray-600\">\n                Channel Distribution\n              </CardTitle>\n              <div className=\"flex gap-1\">\n                <PendingIcon className=\"w-4 h-4 text-yellow-500\" />\n                <ErrorIcon className=\"w-4 h-4 text-red-500\" />\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {loading ? (\n                  <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div>\n                ) : (\n                  transactions.filter(t => t.channel === 'USSD').length\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 mt-1\">\n                USSD transactions\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Navigation */}\n        <div className=\"mb-8 animate-slide-up\" style={{ animationDelay: '0.4s' }}>\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Transaction Types</h2>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            {[\n              { type: 'incoming', label: 'Incoming', color: 'bg-blue-500', icon: '📥' },\n              { type: 'p2p', label: 'P2P Transfer', color: 'bg-purple-500', icon: '🔄' },\n              { type: 'withdrawal', label: 'Withdrawal', color: 'bg-orange-500', icon: '💸' },\n              { type: 'bundle', label: 'Bundle', color: 'bg-indigo-500', icon: '📱' },\n              { type: 'airtime', label: 'Airtime', color: 'bg-cyan-500', icon: '📞' },\n              { type: 'bank', label: 'Bank', color: 'bg-emerald-500', icon: '🏦' },\n            ].map((item) => (\n                <Card key={item.type} className=\"hover:shadow-lg transition-all duration-200 hover:-translate-y-1 cursor-pointer border-yellow-200 hover:border-yellow-400\">\n                  <CardContent className=\"p-4 text-center\">\n                    <div className={`w-12 h-12 ${item.color} rounded-full mx-auto mb-2 flex items-center justify-center text-white text-xl shadow-md`}>\n                      {item.icon}\n                    </div>\n                    <p className=\"text-sm font-medium text-gray-900\">{item.label}</p>\n                    <p className=\"text-xs text-gray-600\">\n                      {getTransactionCount(item.type)} transactions\n                    </p>\n                  </CardContent>\n                </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Charts */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n          <ChartByType transactions={transactions} loading={loading} />\n          <ChartByMonth transactions={transactions} loading={loading} />\n        </div>\n\n        {/* Recent Transactions */}\n        <TransactionTable \n          transactions={recentTransactions} \n          loading={loading}\n          title=\"Recent Transactions\"\n        />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}